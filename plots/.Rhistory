source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
dev.off()
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
warnings()
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data12/", links=c(3,6,9))
q()
source("plotPerformance.R"); plotAllOfAll(prefix="../data12/", links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
dev.oeff()
dev.off()
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data12/", links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
source("plotPerformance.R"); plotAllOfAll(prefix="../data11/", nodes=c(10,20,30), links=c(3,6,9))
q()
source("plotCompareNets.R")
q()
library(data.table)
install.packages(data.table)
install.packages("data.table")
library(data.table)
source("plotCompareNets.R")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
c=rainbow(10)
c[0:2]
c[1:2]
c[0]
c[1]
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", netType="barabasi-albert")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", netType="erdos-renyi")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", netType="erdos-renyi")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", netType="erdos-renyi")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
netTypes=c("full", "erdos-renyi")
methods=c("best-acc", "conf-perfect")
expand.grid(methods,netTypes)
mdply(expand.grid(methods,netTypes))
joinlegend <- function(x,y) paste(x,y,sep=" ")
do.call(expand.grid(methods,netTypes), joinLegend)
do.call(expand.grid(methods,netTypes), joinlegend)
do.call(expand.grid(x=methods,y=netTypes), joinlegend)
plyr
mdply
merge(methods,netTypes,all=T)
joinlegend(method,netTypes)
joinlegend(methods,netTypes)
joinlegend <- function(v1, v2){
leg <- c()
for (i in v1){
for (j in v2){
leg <- c(leg, paste(i,j,sep=" "))
}
}
return(leg)
}
joinlegend(methods,netTypes)
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", accuracy=0.6)
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", accuracy=0.6)
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", accuracy=0.6)
source("plotCompareNets.R");
source("plotCompareNets.R");
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", accuracy=0.6)
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", accuracy=0.6)
range(11,31,4)
sequence(11,31,4)
seq(11,31,4)
range(seq(11,31,4))
kde2d
package(MASS)
library(MASS)
kde2d
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", accuracy=0.6)
dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
len(dataMat)
size(dataMat)
length(dataMat)
length(data.frame())
length(data.frame())
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets0/", accuracy=0.6)
kde2d( dataMat[,1], dataMat[,2], dataMat[,3] )
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
dataMat
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
kde2d( dataMat[,1], dataMat[,2], dataMat[,3] )
dataMat[,1]
c(dataMat[,1])
dataMat[,1]
data.frame(dataMat)
data.frame(dataMat)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
warnings()
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
dataMat$metric
mean(dataMat$metric)
mean(dataMat[,'metric'])
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
kde2d( dataMat[,1], dataMat[,2], dataMat[,3] )
f1 <- kde2d( dataMat[,1], dataMat[,2], dataMat[,3] )
image(f1)
f1 <- kde2d( dataMat[,1], dataMat[,2], dataMat[,3], n=1 )
image(f1)
f1 <- kde2d( dataMat[,1], dataMat[,2], dataMat[,3], n=10 )
image(f1)
data.matrix(dataMat)
data.matrix(dataMat[,3])
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
warnings()
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
seq(11, 31, 4)
levelplot(dataMat~seq(11, 31, 4)*seq(2,10,2))
library(lattice)
levelplot(dataMat~seq(11, 31, 4)*seq(2,10,2))
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
levelplot(dataMat~nodes_list*edges)
nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2)
nodes_list=seq(11, 31, 4); edges=seq(2, 10, 2)
levelplot(dataMat~nodes_list*edges)
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges")
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges", at=brks)
brks <- seq(0.8,1,0.01)
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges", at=brks)
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges", at=brks)
brks <- seq(0.9,1,0.01)
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges", at=brks)
cuts <- cut(dataMat, breaks = brks, include.lowest = TRUE)
cuts
colors <- colorRampPalette(c("white", "red"))(length(levels(cuts)))
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges",
panel = function(...){
panel.fill(col = "black")
panel.levelplot(...)
if (length(cl)>0){ for (i in 1:length(cl)){ panel.lines( cbind(cl[[i]]$y, cl[[i]]$x), col='blue') } }
#panel.text(data$rhoA, data$rhoB, substring(as.character(round(mat,2)), 2), cex=cexsize)
#panel.text(data$rhoA, data$rhoB, round(mat,2), cex=cexsize)
},
at = brks,
colorkey = list(col = colors, at = brks),
cuts = (length(colors)),
aspect="iso",
col.regions=colors
)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges",
#panel = function(...){
#panel.fill(col = "black")
#panel.levelplot(...)
#if (length(cl)>0){ for (i in 1:length(cl)){ panel.lines( cbind(cl[[i]]$y, cl[[i]]$x), col='blue') } }
##panel.text(data$rhoA, data$rhoB, substring(as.character(round(mat,2)), 2), cex=cexsize)
##panel.text(data$rhoA, data$rhoB, round(mat,2), cex=cexsize)
#},
at = brks,
colorkey = list(col = colors, at = brks),
cuts = (length(colors)),
aspect="iso",
col.regions=colors
)
dataMat
levelplot(dataMat~edges*nodes_list, xlab="nodes", ylab="edges")
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges")
image(x=nodes_list, y=edges, z=dataMat)
image(x=nodes_list, y=edges, z=dataMat)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
image(x=nodes_list, y=edges, z=dataMat)
levelplot(dataMat~nodes_list*edges, xlab="nodes", ylab="edges")
levelplot(dataMat, xlab="nodes", ylab="edges")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
levelplot(dataMat, xlab="nodes", ylab="edges",
at = brks,
colorkey = list(col = colors, at = brks),
cuts = (length(colors)),
aspect="iso",
col.regions=colors)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R");
source("plotCompareNets.R");
diffMatrixSuccessMethod(prefix="../nets1/")
diffMatrixSuccessMethod(prefix="../nets1/")
q()
source("plotCompareNets.R");
diffMatrixSuccessMethod(prefix="../nets1/")
diffMatrixSuccessMethod(prefix="../nets1/")
diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
dataMat
levelplot(dataMat)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
source("plotCompareNets.R"); dataMat <- diffMatrixSuccessMethod(prefix="../nets1/")
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
colors <- colorRampPalette(c('red', 'orange', 'yellow', 'green', 'cyan', 'blue'))(length(levels(cuts)))
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
diffMatrixSuccessMethod(prefix="../nets1/")
diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R")
diffMatrixSuccessMethod(prefix="../nets1/")
q()
levelplot(dataMat, xlab="nodes", ylab="edges", at = brks, colorkey = list(col = colors, at = brks), cuts = (length(colors)), aspect="iso", col.regions=colors)
source("plotCompareNets.R")
diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R")
diffMatrixSuccessMethod(prefix="../nets1/")
diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
rep("n",4)
rep("n",4)
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="erdos-renyi")
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="erdos-renyi", methods=("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="erdos-renyi", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="barabasi-albert", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="erdos-renyi", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="barabasi-albert", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="barabasi-albert", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="barabasi-albert", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); diffMatrixSuccessMethod(prefix="../nets1/", netType="erdos-renyi", methods=c("best-acc","majority-rand"))
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/")
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-rand", "majority-bias", "majority-inhibited") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-rand", "majority-bias", "majority-inhibit") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-rand", "majority-bias", "majority-inhibit") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-rand", "majority-bias", "majority-inhibit") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotSuccessOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("conf-perfect") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("conf-perfect") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-bias") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-inhibit") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("conf-perfect") )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets1/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets1/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets1/", method="majority-rand" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets1/", netType="erdos-renyi" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets1/", netType="erdos-renyi", method="majority-rand" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", netType="erdos-renyi", method="majority-rand" )
source("plotCompareNets.R"); plotEffectivityOnNodes(prefix="../nets1/", methods=c("majority-rand") )
q()
\
\q()
q
q()
q()
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
d
if (d>0)
{
}
d>0
d>0
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
source("plotCompareNets.R"); d<-diffMatrixSuccessFullnet(prefix="../nets2/", method="conf-perfect", netType="erdos-renyi" , brks=seq(-0.10,0.10,0.005))
plyr
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
dev.off()
dev.off()
dev.off()
dev.off()
dev.off()
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix, nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), 
numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005),
method="conf-perfect" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
d
nrow(d)
ncol(d)
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
source("plotCompareNets.R"); p<- diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
nrow(p)
ncol(p)
length(p)
is.null(nrow(p))
p<-rbind(p,c(1,3))
is.null(nrow(p))
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
source("plotCompareNets.R"); diffMatrixSuccessFullnet(prefix="../nets2/", nodes_list=seq(11, 31, 4), edges=seq(2, 10, 2), links=seq(0.1, 0.6, 0.1), numRuns=100, netType="barabasi-albert", accuracy=0.7, acstdv=0.3, brks=seq(-0.10,0.10,0.005), method="conf-perfect" )
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
source("plotCompareNets.R"); allSuccessPlots(prefix="../nets2/")
source("plotCompareNets.R"); allSuccessMethodPlots(prefix="../nets2/")
dev.off()
dev.off()
source("plotCompareNets.R"); allTimePlots(prefix="../nets2/")
q()
seq(11,100,8)
seq(11,100,16)
a <- 3 + FALSE
a
a <- 3 + TRUE
a
source("plotCompareConf.R"); 
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf2/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf2/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf2/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf4/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf4/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf4/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf0/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf1/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf1/", methods=c("conf-perfect", "log-odds") )
source("plotCompareConf.R"); simpleVsDDMtoPdf(prefix="../conf1/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf1/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf1/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf1/", methods=c("conf-perfect", "log-odds") )
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf1/", methods=c("conf-perfect", "log-odds") )
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf1/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf2/")
source("plotCompareConf.R"); plotSuccessOnNodes(prefix="../conf1/", methods=c("conf-perfect", "log-odds") )
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf1/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf2/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf1/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf1/")
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf2/")
dev.off()
dev.off()
source("plotCompareConf.R"); allDecModelsToPdf(prefix="../conf2/")
q()
